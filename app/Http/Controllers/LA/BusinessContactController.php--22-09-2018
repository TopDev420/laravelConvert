<?php
/**
 * Controller genrated using LaraAdmin
 * Help: http://laraadmin.com
 */

namespace App\Http\Controllers\LA;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use Input;
use DB;
use Validator;
// use Datatables
use Yajra\Datatables\Datatables;;
use Collective\Html\FormFacade as Form;
use Dwij\Laraadmin\Models\Module;
use Dwij\Laraadmin\Models\ModuleFields;

use App\Models\BusinessContact;

class BusinessContactController extends Controller
{
	public $show_action = true;
	public $view_col = 'email_address';
	public $listing_cols = ['id', 'first_name', 'last_name', 'job_title', 'email_address', 'company_name', 'company_website', 'phone_number', 'city', 'state', 'zipcode', 'country', 'industries', 'employees', 'revenue'];
	public $exclude_cols = ['types'];

	public function __construct() {
    	// Field Access of Listing Columns
    	if(\Dwij\Laraadmin\Helpers\LAHelper::laravel_ver() == 5.3) {
    		$this->middleware(function ($request, $next) {
    			$this->listing_cols = ModuleFields::listingColumnAccessScan('BusinessContacts', $this->listing_cols);
    			return $next($request);
    		});
    	} else {
    		$this->listing_cols = ModuleFields::listingColumnAccessScan('BusinessContacts', $this->listing_cols);
    	}
    }

    /**
	 * Display a listing of the Priceslakes.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index()
	{
		$module = Module::get('BusinessContacts');

		if(Module::hasAccess($module->id)) {
			return View('la.businesscontacts.index', [
				'show_actions' => $this->show_action,
				'listing_cols' => $this->listing_cols,
				'module' => $module
			]);
		} else {
            return redirect(config('laraadmin.adminRoute')."/");
        }
	}


	/**
	 * Show the form for creating a new organization.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create()
	{
		//
	}


	/**
	 * Store a newly created organization in database.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(Request $request)
	{
	     if(Module::hasAccess("BusinessContacts", "create")) {
			$types = $request->types;
			if ($this->exclude_cols) {
				foreach ($this->exclude_cols as $key => $value) {
					$request->request->remove($value);
				}
			}
			$rules = Module::validateRules("BusinessContacts", $request);

			$validator = Validator::make($request->all(), $rules);
			//echo '<pre>';print_r($request->all()['name']);exit;
			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();
			}
			// $name = $request->all()['price_range'];
			$insert_id = Module::insert("BusinessContacts", $request);
			// $slug = strtolower(str_replace(' ', '_', $name));
			// DB::table('businesscontacts')->where('id', $insert_id)->update(['slug' => $slug]);
			DB::table('businesscontacts')->where('id', $insert_id)->update(['types' => $types]);
			return redirect()->route(config('laraadmin.adminRoute') . '.businesscontacts.index');

		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}


	/**
	 * Display the specified organization.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id)
	{
		if(Module::hasAccess("BusinessContacts", "view")) {

			$BusinessContacts = BusinessContact::find($id);
			if(isset($BusinessContacts->id)) {
				$module = Module::get('BusinessContacts');
				$module->row = $BusinessContacts;

				return view('la.businesscontacts.show', [
					'module' => $module,
					'view_col' => $this->view_col,
					'no_header' => true,
					'no_padding' => "no-padding"
				])->with('businesscontacts', $BusinessContacts);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("businesscontacts"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}


	/**
	 * Show the form for editing the specified organization.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function edit($id)
	{
		if(Module::hasAccess("BusinessContacts", "edit")) {
			$BusinessContacts = BusinessContact::find($id);
			if(isset($BusinessContacts->id)) {
				$BusinessContacts = BusinessContact::find($id);

				$module = Module::get('BusinessContacts');

				$module->row = $BusinessContacts;

				return view('la.businesscontacts.edit', [
					'module' => $module,
					'view_col' => $this->view_col,
				])->with('businesscontacts', $BusinessContacts);
			} else {
				return view('errors.404', [
					'record_id' => $id,
					'record_name' => ucfirst("businesscontacts"),
				]);
			}
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}


	/**
	 * Update the specified organization in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id)
	{
		if(Module::hasAccess("BusinessContacts", "edit")) {
			$types = $request->types;
			if($this->exclude_cols){
				foreach($this->exclude_cols as $key => $value){
					$request->request->remove($value);
				}
			}
			$rules = Module::validateRules("BusinessContacts", $request, true);

			$validator = Validator::make($request->all(), $rules);

			if ($validator->fails()) {
				return redirect()->back()->withErrors($validator)->withInput();;
			}

			$insert_id = Module::updateRow("BusinessContacts", $request, $id);
			DB::table('businesscontacts')->where('id', $insert_id)->update(['types' => $types]);
			return redirect()->route(config('laraadmin.adminRoute') . '.businesscontacts.index');

		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Remove the specified organization from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		if(Module::hasAccess("BusinessContacts", "delete")) {
			BusinessContact::find($id)->delete();

			// Redirecting to index() method
			return redirect()->route(config('laraadmin.adminRoute') . '.businesscontacts.index');
		} else {
			return redirect(config('laraadmin.adminRoute')."/");
		}
	}

	/**
	 * Datatable Ajax fetch
	 *
	 * @return
	 */
	public function dtajax()
	{
		$values = DB::table('businesscontacts')->select($this->listing_cols)->whereNull('deleted_at');
		$out = Datatables::of($values)->make();
		$data = $out->getData();

		$fields_popup = ModuleFields::getModuleFields('BusinessContacts');
		$san_url = url('/').'/storage/uploads/';
		for($i=0; $i < count($data->data); $i++) {
			for ($j=0; $j < count($this->listing_cols); $j++) {
				$col = $this->listing_cols[$j];
				if($fields_popup[$col] != null && $fields_popup[$col]->field_type_str == "Image") {
					if($data->data[$i][$j] != 0) {
						$img = \App\Models\Upload::find($data->data[$i][$j]);
						if(isset($img->name)) {
							$data->data[$i][$j] = '<img height= "69" src="'.$san_url.$img->name.'?s=50">';
						} else {
							$data->data[$i][$j] = "";
						}
					} else {
						$data->data[$i][$j] = "";
					}
				}
				if($fields_popup[$col] != null && starts_with($fields_popup[$col]->popup_vals, "@")) {
					$data->data[$i][$j] = ModuleFields::getFieldValue($fields_popup[$col], $data->data[$i][$j]);
				}
				// print_r('<a href="'.url(config('laraadmin.adminRoute') . '/priceslakes/'.$data->data[$i][0]).'">');exit;
				if($col == $this->view_col) {
					$data->data[$i][$j] = '<a href="'.url(config('laraadmin.adminRoute') . '/businesscontacts/'.$data->data[$i][0]).'">'.$data->data[$i][$j].'</a>';
				}
				// else if($col == "author") {
				//    $data->data[$i][$j];
				// }
			}

			if($this->show_action) {
				$output = '';
				if(Module::hasAccess("BusinessContacts", "edit")) {
					$output .= '<a href="'.url(config('laraadmin.adminRoute') . '/businesscontacts/'.$data->data[$i][0].'/edit').'" class="btn btn-warning btn-xs" style="display:inline;padding:2px 5px 3px 5px;"><i class="fa fa-edit"></i></a>';
				}

				if(Module::hasAccess("BusinessContacts", "delete")) {
					$output .= Form::open(['route' => [config('laraadmin.adminRoute') . '.businesscontacts.destroy', $data->data[$i][0]], 'method' => 'delete', 'style'=>'display:inline']);
					$output .= ' <button class="btn btn-danger btn-xs" type="submit"><i class="fa fa-times"></i></button>';
					$output .= Form::close();
				}
				$data->data[$i][] = (string)$output;
			}
		}
		$out->setData($data);
		return $out;
	}

	public function importc(Request $request)
	{
		if (Input::hasFile('file'))
        {
        	$file = Input::file('file');
        	$name = time() . '-' . $file->getClientOriginalName();

            $path = storage_path('documents');

            $file->move($path, $name);
            $res = $this->importCsv($name);
            $contact_array = array();
			foreach ($res as $key => $value) {
				$contact_array['first_name'] = $value['First name'];
				$contact_array['last_name'] = $value['Last name'];
				$contact_array['job_title'] = $value['Title'];
				$contact_array['email_address'] = $value['Email'];
				$contact_array['company_name'] = $value['Company Name'];
				$contact_array['company_website'] = $value['Website'];
				$contact_array['phone_number'] = $value['Phone'];
				$contact_array['city'] = $value['City'];
				$contact_array['state'] = $value['State'];
				$contact_array['zipcode'] = $value['ZipCode'];
				$contact_array['country'] = $value['Country'];
				$contact_array['industries'] = $value['Industries'];
				$contact_array['employees'] = $value['Employees'];
				$contact_array['revenue'] = $value['Revenue'];

				$lastId = DB::table('businesscontacts')->insertGetId($contact_array);
			}
        }
        	return redirect()->route(config('laraadmin.adminRoute') . '.businesscontacts.index');
	}
	public function importCsv($name='')
	{
	    $file = storage_path('documents/'.$name);
	    $customerArr = $this->csvToArray($file);
	    return $customerArr;
	}
	function csvToArray($filename = '', $delimiter = ',')
	{
		// if (strpos($filename, 'public') !== false) {
		//     $filename = str_replace('public', 'storage',$filename);
		// }

	    if (!file_exists($filename) || !is_readable($filename))
	        return false;

	    $header = null;
	    $data = array();
	    if (($handle = fopen($filename, 'r')) !== false)
	    {
	        while (($row = fgetcsv($handle)) !== false)
	        {
	            if (!$header)
	                $header = $row;
	            else
	            	$data[] = array_combine($header, $row);
	        }
	        fclose($handle);
	    }
	    return $data;
	}

}
